#!/usr/bin/perl

use Getopt::Std;

getopts('f:n:l:');
$mod = 1;
@children;

open $INFILE, $opt_f or die "$!\nFILE $opt_f";

@allLines = <$INFILE>;
close $INFILE;

# Decide...
if($opt_n > 1){
    multi();
}else{
    single();
}


# Multiple processes at once.
sub multi{
  while (@allLines){
      @children = ();
      for(1..$opt_n){
          $cmd = shift @allLines;
          if($cmd =~ /model-/){
              $mod=0;
          }
          $pid = fork();
          if ($pid ==-1){ # Fork failed
              warn($!);
              last;
          }
          elsif($pid == 0){  # Child
              chomp($cmd);
              if($mod == 1){
                  exec($cmd." > /dev/null 2>&1");
              }else{
                  exec($cmd);
              }
          }
          elsif($pid){    # Parent
              push(@children, $pid);    
          }
          $mod=1;
      }
      foreach(@children){
          waitpid($_, 0);
      }
  }
}

# Single job at a time, one after the other.
sub single{
  foreach(@allLines){
      if($_ =~ /model-/){
          $mod=0;
      }

      chomp($_);
      if($mod == 1){
          system($_." > /dev/null 2>&1");
      }else{
          system($_);
      }
      wait();
      $mod=1;
   }
          
        
}

